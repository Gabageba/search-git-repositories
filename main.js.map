{"version":3,"file":"main.js","mappings":"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","sources":["webpack://beauty/./src/utils/const.js","webpack://beauty/./src/scripts/form/formError.js","webpack://beauty/./src/utils/errorHandlers.js","webpack://beauty/./src/utils/dateConverter.js","webpack://beauty/./src/scripts/repositories/createCard.js","webpack://beauty/./src/scripts/api/getRepositories.js","webpack://beauty/./src/scripts/repositories/clearRepositoriesList.js","webpack://beauty/./src/scripts/repositories/loader.js","webpack://beauty/./src/scripts/repositories/createRepositoriesList.js","webpack://beauty/./src/scripts/form/submitForm.js"],"sourcesContent":["export const API_URL = 'https://api.github.com'\r\nexport const LIMIT = 10\r\n","export const addFormError = (target, errorText) => {\r\n  const currentForm = target.closest('form')\r\n  const hasError = currentForm.querySelector('.search__error_text')\r\n  if (hasError) return\r\n\r\n  const searchBlock = currentForm.querySelector('.search__block')\r\n\r\n  const error = document.createElement('div')\r\n  error.className = 'search__error_text'\r\n  error.innerHTML = errorText\r\n  searchBlock.append(error)\r\n\r\n  target.classList.add('search__error')\r\n}\r\n\r\nexport const removeFormError = (event) => {\r\n  const target = event.target || event\r\n  const currentForm = target.closest('form')\r\n\r\n  const error = currentForm.querySelector('.search__error_text')\r\n  if (!error) return\r\n\r\n  error.remove()\r\n\r\n  target.classList.remove('search__error')\r\n}","import {addFormError} from '../scripts/form/formError'\r\n\r\nexport const serverErrorHandler = (response) => {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response\r\n  } else {\r\n    const error = new Error(response.statusText);\r\n    error.response = response;\r\n    throw error\r\n  }\r\n}\r\n\r\nexport const formErrorHandler = (event) => {\r\n  const target = event.target || event\r\n  const value = target.value\r\n\r\n  if (!value) {\r\n    addFormError(target, 'Поисковая строка не должна быть пустой')\r\n    return false\r\n  }\r\n\r\n  if (value.length >= 255) {\r\n    addFormError(target, 'Длинна поискового запроса не должна превышать 255 символов')\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n","export const dateConverter = (date) => {\r\n  const currentDate = new Date(date)\r\n\r\n  let day = currentDate.getDate()\r\n  if (day < 10) {\r\n    day = '0' + day\r\n  }\r\n  let month = currentDate.getMonth()\r\n  if (month < 10) {\r\n    month = '0' + month\r\n  }\r\n  let year = currentDate.getFullYear()\r\n\r\n  return `${day}.${month}.${year}`\r\n}","import {dateConverter} from '../../utils/dateConverter'\r\n\r\nexport const createCard = (item) => {\r\n  const repositories = document.querySelector('.repositories')\r\n  const cardHTML = `\r\n   <a href=${item.owner.html_url} target=\"_blank\" class=\"repositories__owner\">\r\n     <img width=\"100\" height=\"100\"  src=${item.owner.avatar_url} alt=${item.owner.login}>\r\n     <span>${item.owner.login}</span>\r\n   </a>\r\n   <div class=\"repositories__repo\">\r\n     <a href=${item.html_url} target=\"_blank\" class=\"repositories__name\">${item.name}</a>\r\n     <div class=\"repositories__description\">${item.description || 'Нет описания'}</div>\r\n     <div class=\"repositories__sub-info\">\r\n       <span class=\"repositories__sub-info_title\">Язык: </span>\r\n       <span class=\"repositories__sub-info_content\">${item.language || 'Неизвестный язык'}</span>\r\n     </div>\r\n     <div class=\"repositories__sub-info\">\r\n       <span class=\"repositories__sub-info_title\">Дата создания: </span>\r\n       <span class=\"repositories__sub-info_content\">${dateConverter(item.created_at) || 'Неизвестна'}</span>\r\n     </div>\r\n     <div class=\"repositories__sub-info\">\r\n       <span class=\"repositories__sub-info_title\">Дата обновления: </span>\r\n       <span class=\"repositories__sub-info_content\">${dateConverter(item.updated_at || 'Неизвестна')}</span>\r\n     </div>\r\n   </div>\r\n  `\r\n\r\n  const card = document.createElement('div')\r\n  card.className = 'repositories__item'\r\n  card.innerHTML = cardHTML\r\n\r\n  repositories.append(card)\r\n}","import {API_URL, LIMIT} from '../../utils/const'\r\nimport {serverErrorHandler} from '../../utils/errorHandlers'\r\nimport {createRepositoriesList} from '../repositories/createRepositoriesList'\r\nimport {clearRepositoriesList} from '../repositories/clearRepositoriesList'\r\nimport {addLoader, removeLoader} from '../repositories/loader'\r\n\r\nexport const getRepositories = (repositoryName) => {\r\n  const url = `${API_URL}/search/repositories?q=${repositoryName}&per_page=${LIMIT}`\r\n  clearRepositoriesList()\r\n  addLoader()\r\n\r\n  fetch(url)\r\n    .then(response => {\r\n      return serverErrorHandler(response)\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => createRepositoriesList(result))\r\n    .catch(err => {\r\n      console.error(err)\r\n    })\r\n    .finally(() => removeLoader())\r\n}","export const clearRepositoriesList = () => {\r\n  const repositories = document.querySelector('.repositories')\r\n  repositories.innerHTML = ''\r\n}","export const addLoader = () => {\r\n  const repositories = document.querySelector('.repositories')\r\n  const loader = document.createElement('span')\r\n  loader.className = 'loader'\r\n  repositories.append(loader)\r\n}\r\n\r\nexport const removeLoader = () => {\r\n  const loader = document.querySelector('.loader')\r\n  loader.remove()\r\n}","import {createCard} from './createCard'\r\n\r\nconst notFound = () => {\r\n  const repositories = document.querySelector('.repositories')\r\n  const error = document.createElement('span')\r\n  error.className = 'repositories__not-found'\r\n  error.innerHTML = 'Ничего не найдено'\r\n\r\n  repositories.append(error)\r\n}\r\n\r\nexport const createRepositoriesList = (response) => {\r\n  const {total_count, items} = response\r\n  if (total_count === 0) {\r\n    notFound()\r\n  } else {\r\n    for (const item of items) {\r\n      createCard(item)\r\n    }\r\n  }\r\n}","import {getRepositories} from '../api/getRepositories'\r\nimport {formErrorHandler} from '../../utils/errorHandlers'\r\nimport {removeFormError} from './formError'\r\n\r\nconst form = document.querySelector('.search')\r\nconst searchBar = form['search-bar']\r\n\r\nconst submitForm = (event) => {\r\n  event.preventDefault()\r\n  if (formErrorHandler(searchBar)) {\r\n    getRepositories(searchBar.value)\r\n  }\r\n}\r\n\r\nform.onsubmit = submitForm\r\n\r\nsearchBar.addEventListener('blur', formErrorHandler)\r\nsearchBar.addEventListener('focus', removeFormError)\r\nsearchBar.addEventListener('input', (event) => {\r\n  if (event.target.value !== '') {\r\n    removeFormError(event.target)\r\n  }\r\n})"],"names":["addFormError","target","errorText","currentForm","closest","querySelector","searchBlock","error","document","createElement","className","innerHTML","append","classList","add","removeFormError","event","remove","formErrorHandler","value","length","dateConverter","date","currentDate","Date","day","getDate","month","getMonth","getFullYear","createCard","item","repositories","cardHTML","owner","html_url","avatar_url","login","name","description","language","created_at","updated_at","card","getRepositories","repositoryName","url","loader","addLoader","fetch","then","response","status","Error","statusText","serverErrorHandler","res","json","result","total_count","items","notFound","createRepositoriesList","catch","err","console","finally","searchBar","onsubmit","preventDefault","addEventListener"],"sourceRoot":""}